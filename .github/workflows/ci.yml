name: Build and test

on:
  push:
    branches: ['**']
  pull_request:

# Cancel previous runs for the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

jobs:
  clippy:
    name: clippy lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

  test:
    name: test (${{ matrix.os }} / toolchain ${{ matrix.toolchain }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        toolchain: [stable]
    steps:
      - uses: actions/checkout@v4

      # Install Rust
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v2

      # Prepare training data
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run preprocessing
        run: python dev/data/tinyshakespeare.py

      # Build and test
      - name: Build
        run: cargo build --workspace --locked
      - name: Test
        run: cargo test --workspace --all-targets --locked

  build-cuda:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        precision: [fp32, bf16, fp16]
        toolchain: [stable]
    name: build-cuda-${{ matrix.precision }}
    container:
      image: nvidia/cuda:12.9.1-cudnn-devel-ubuntu24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install curl
        run: apt-get update && apt-get install -y curl
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v2

      - name: Build ${{ matrix.precision }}
        run: cargo build --release --features cuda,${{ matrix.precision }}
